package com.yn.module.service;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.mail.javamail.JavaMailSender;import org.springframework.mail.javamail.JavaMailSenderImpl;import org.springframework.mail.javamail.MimeMessageHelper;import org.springframework.stereotype.Service;import org.thymeleaf.TemplateEngine;import org.thymeleaf.context.Context;import javax.mail.internet.InternetAddress;import javax.mail.internet.MimeMessage;import javax.mail.internet.MimeUtility;import java.util.Properties;@Servicepublic class MailService {    Logger log = LoggerFactory.getLogger(getClass());    @Autowired    private JavaMailSender mailSender;    @Autowired    private TemplateEngine templateEngine;    @Value("${spring.mail.host}")    private String host;    @Value("${spring.mail.from}")    private String from;    @Value("${spring.mail.port}")    private Integer port;    @Value("${spring.mail.username}")    private String username;    @Value("${spring.mail.password}")    private String password;    @Value("${spring.mail.timeout}")    private String timeout;    @Value("${spring.mail.encoding}")    private String encoding;    public boolean sendEmail(String mailTo, String language, String number) {        try {            JavaMailSenderImpl sender = new JavaMailSenderImpl();            sender.setHost(host);            sender.setPort(port);            sender.setUsername(username);            sender.setPassword(password);            Properties pro = System.getProperties();            pro.put("mail.smtp.auth", "true");            pro.put("mail.smtp.timeout", timeout);            pro.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");            sender.setJavaMailProperties(pro);            MimeMessage msg = sender.createMimeMessage();            MimeMessageHelper helper = new MimeMessageHelper(msg, true, encoding);            helper.setTo(mailTo);            String subject = "申请确认";            if ("1".equals(language)) {                subject = "申请确认";            } else {                subject = "Apply for confirmation";            }            String nick = MimeUtility.encodeText(subject);            Context context = new Context();            //获取thymeleaf的html模板(默认中文模板)            String emailContent = templateEngine.process("emailCn", context);            context.setVariable("number", number);            helper.setFrom(new InternetAddress(nick + " <" + from + ">"));            if ("1".equals(language)) {                helper.setSubject("申请确认");            } else {                helper.setSubject("Apply for confirmation");                emailContent = templateEngine.process("emailEn", context);            }            helper.setText(emailContent, true);            sender.send(msg);            return true;        } catch (Exception e) {            log.error(e.getStackTrace().toString());            return false;        }    }}